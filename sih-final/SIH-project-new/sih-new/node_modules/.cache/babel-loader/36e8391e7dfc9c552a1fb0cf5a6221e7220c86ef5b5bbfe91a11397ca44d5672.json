{"ast":null,"code":"var _jsxFileName = \"D:\\\\ubuntu\\\\sih-final\\\\SIH-project-new\\\\sih-new\\\\src\\\\components\\\\SurveyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UserPreferences.css'; // Import CSS file for styling\nimport PreferenceButton from './PreferenceButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPreferences = () => {\n  _s();\n  const [preferences, setPreferences] = useState([{\n    id: 1,\n    name: 'Sports',\n    selected: false\n  }, {\n    id: 2,\n    name: 'Technology',\n    selected: false\n  }, {\n    id: 3,\n    name: 'Music',\n    selected: false\n  }, {\n    id: 4,\n    name: 'Food',\n    selected: false\n  }]);\n  const [selectedPreferences, setSelectedPreferences] = useState([]);\n  const handlePreferenceClick = id => {\n    const selectedPreference = preferences.find(preference => preference.id === id);\n    if (selectedPreference.selected) {\n      // If already selected, remove from selected preferences\n      const updatedSelectedPreferences = selectedPreferences.filter(preference => preference.id !== id);\n      setSelectedPreferences(updatedSelectedPreferences);\n\n      // Update the selected state of the clicked preference\n      const updatedPreferences = preferences.map(preference => preference.id === id ? {\n        ...preference,\n        selected: false\n      } : preference);\n      setPreferences(updatedPreferences);\n    } else {\n      // If not selected, add to selected preferences\n      setSelectedPreferences([...selectedPreferences, selectedPreference]);\n\n      // Update the selected state of the clicked preference\n      const updatedPreferences = preferences.map(preference => preference.id === id ? {\n        ...preference,\n        selected: true\n      } : preference);\n      setPreferences(updatedPreferences);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPreferences\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose Your Preferences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preferenceButtons\",\n      children: preferences.map(preference => /*#__PURE__*/_jsxDEV(PreferenceButton, {\n        preference: preference,\n        onClick: handlePreferenceClick,\n        isSelected: preference.selected\n      }, preference.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedPreferences\",\n      children: selectedPreferences.map(preference => /*#__PURE__*/_jsxDEV(PreferenceButton, {\n        preference: preference,\n        onClick: handlePreferenceClick,\n        isSelected: true\n      }, preference.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPreferences, \"SIPR6aCT3M5zAtyIPXVvaXuCews=\");\n_c = UserPreferences;\nexport default UserPreferences;\nvar _c;\n$RefreshReg$(_c, \"UserPreferences\");","map":{"version":3,"names":["React","useState","PreferenceButton","jsxDEV","_jsxDEV","UserPreferences","_s","preferences","setPreferences","id","name","selected","selectedPreferences","setSelectedPreferences","handlePreferenceClick","selectedPreference","find","preference","updatedSelectedPreferences","filter","updatedPreferences","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isSelected","_c","$RefreshReg$"],"sources":["D:/ubuntu/sih-final/SIH-project-new/sih-new/src/components/SurveyComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './UserPreferences.css'; // Import CSS file for styling\r\nimport PreferenceButton from './PreferenceButton';\r\n\r\nconst UserPreferences = () => {\r\n  const [preferences, setPreferences] = useState([\r\n    { id: 1, name: 'Sports', selected: false },\r\n    { id: 2, name: 'Technology', selected: false },\r\n    { id: 3, name: 'Music', selected: false },\r\n    { id: 4, name: 'Food', selected: false },\r\n  ]);\r\n\r\n  const [selectedPreferences, setSelectedPreferences] = useState([]);\r\n\r\n  const handlePreferenceClick = (id) => {\r\n    const selectedPreference = preferences.find((preference) => preference.id === id);\r\n\r\n    if (selectedPreference.selected) {\r\n      // If already selected, remove from selected preferences\r\n      const updatedSelectedPreferences = selectedPreferences.filter(\r\n        (preference) => preference.id !== id\r\n      );\r\n      setSelectedPreferences(updatedSelectedPreferences);\r\n\r\n      // Update the selected state of the clicked preference\r\n      const updatedPreferences = preferences.map((preference) =>\r\n        preference.id === id ? { ...preference, selected: false } : preference\r\n      );\r\n      setPreferences(updatedPreferences);\r\n    } else {\r\n      // If not selected, add to selected preferences\r\n      setSelectedPreferences([...selectedPreferences, selectedPreference]);\r\n\r\n      // Update the selected state of the clicked preference\r\n      const updatedPreferences = preferences.map((preference) =>\r\n        preference.id === id ? { ...preference, selected: true } : preference\r\n      );\r\n      setPreferences(updatedPreferences);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"userPreferences\">\r\n      <h2>Choose Your Preferences</h2>\r\n      <div className=\"preferenceButtons\">\r\n        {preferences.map((preference) => (\r\n          <PreferenceButton\r\n            key={preference.id}\r\n            preference={preference}\r\n            onClick={handlePreferenceClick}\r\n            isSelected={preference.selected}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"selectedPreferences\">\r\n        {selectedPreferences.map((preference) => (\r\n          <PreferenceButton\r\n            key={preference.id}\r\n            preference={preference}\r\n            onClick={handlePreferenceClick}\r\n            isSelected={true}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPreferences;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}