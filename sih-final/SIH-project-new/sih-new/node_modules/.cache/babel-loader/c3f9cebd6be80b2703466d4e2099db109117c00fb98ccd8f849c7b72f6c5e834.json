{"ast":null,"code":"var _jsxFileName = \"D:\\\\ubuntu\\\\sih-final\\\\SIH-project-new\\\\sih-new\\\\src\\\\components\\\\SurveyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Button, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport questionsData from './questionsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    width: '80%',\n    margin: '0 auto',\n    padding: theme.spacing(3),\n    textAlign: 'center' // Center align form content\n  },\n\n  questionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1),\n    backgroundColor: '#f9f9f9'\n  },\n  questionText: {\n    flexGrow: 1,\n    // Allow question text to grow and occupy remaining space\n    marginRight: theme.spacing(2)\n  }\n}));\nconst CareerGuidanceForm = () => {\n  _s();\n  const classes = useStyles();\n  const [answers, setAnswers] = useState({});\n  const handleAnswerChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [name]: value === 'Yes' // Store boolean value for each question\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Form submitted with answers:', answers);\n    // Add logic to handle form submission (e.g., send data to server)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.formContainer,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Career Guidance Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), questionsData.map((question, index) => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.questionContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.questionText,\n        children: [index + 1, \". \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          \"aria-label\": `question-${question.id}`,\n          name: `question-${question.id}`,\n          value: answers[`question-${question.id}`] ? 'Yes' : 'No',\n          onChange: handleAnswerChange,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Yes\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 54\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"No\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 53\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CareerGuidanceForm, \"YqK2RY7jNtxm0aBbsgfgayejvv8=\", false, function () {\n  return [useStyles];\n});\n_c = CareerGuidanceForm;\nexport default CareerGuidanceForm;\nvar _c;\n$RefreshReg$(_c, \"CareerGuidanceForm\");","map":{"version":3,"names":["React","useState","FormControl","FormControlLabel","FormLabel","Radio","RadioGroup","Button","Typography","Paper","makeStyles","questionsData","jsxDEV","_jsxDEV","useStyles","theme","formContainer","width","margin","padding","spacing","textAlign","questionContainer","display","alignItems","marginBottom","border","borderRadius","backgroundColor","questionText","flexGrow","marginRight","CareerGuidanceForm","_s","classes","answers","setAnswers","handleAnswerChange","event","name","value","target","prevAnswers","handleSubmit","preventDefault","console","log","className","onSubmit","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","elevation","component","row","id","onChange","control","color","label","type","_c","$RefreshReg$"],"sources":["D:/ubuntu/sih-final/SIH-project-new/sih-new/src/components/SurveyComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Button, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport questionsData from './questionsData';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formContainer: {\r\n    width: '80%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(3),\r\n    textAlign: 'center', // Center align form content\r\n  },\r\n  questionContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    border: '1px solid #ccc',\r\n    borderRadius: theme.spacing(1),\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  questionText: {\r\n    flexGrow: 1, // Allow question text to grow and occupy remaining space\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CareerGuidanceForm = () => {\r\n  const classes = useStyles();\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  const handleAnswerChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [name]: value === 'Yes', // Store boolean value for each question\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log('Form submitted with answers:', answers);\r\n    // Add logic to handle form submission (e.g., send data to server)\r\n  };\r\n\r\n  return (\r\n    <form className={classes.formContainer} onSubmit={handleSubmit}>\r\n      <Typography variant=\"h5\" gutterBottom>Career Guidance Form</Typography>\r\n      {questionsData.map((question, index) => (\r\n        <Paper key={question.id} elevation={3} className={classes.questionContainer}>\r\n          <Typography variant=\"body1\" className={classes.questionText}>\r\n            {index + 1}. {question.question}\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label={`question-${question.id}`}\r\n              name={`question-${question.id}`}\r\n              value={answers[`question-${question.id}`] ? 'Yes' : 'No'}\r\n              onChange={handleAnswerChange}\r\n            >\r\n            <div>\r\n              <FormControlLabel value=\"Yes\" control={<Radio color=\"primary\" />} label=\"Yes\" />\r\n              <FormControlLabel value=\"No\" control={<Radio color=\"primary\" />} label=\"No\" />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Paper>\r\n      ))}\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CareerGuidanceForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}